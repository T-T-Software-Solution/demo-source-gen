# https://www.thadaw.com/posts/publishing-docker-image-on-git-hub-package-publicly-with-github-actions-6wrk7rh/
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
name: Deploy

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  workflow_dispatch:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  container_registry_server: ${{ secrets.ACR_SERVER_NAME }}.azurecr.io
  container_registry_username: ${{ secrets.ACR_SERVER_NAME }}
  container_registry_password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  container_app_revision_suffix: gh-actions-${{ github.run_id }}-${{ github.run_attempt }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    name: "ðŸš€ Deploy ${{ matrix.service_name }}"
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Frontend Backoffice
          - service_name: Frontend Backoffice
            repository: T-T-Software-Solution/ttss-fe-mono
            branch: feature/edit-inline-table.dockerfile
            image_name: ttss-fe-backoffice
            image_tag: latest
            working_dir: .
            project_dir: apps/backoffice
            dockerfile: ./apps/backoffice/Dockerfile
            container_app_name: fe-backoffice
            container_app_resource_group: demo-source-gen

          # Backend API
          - service_name: Backend API
            repository: T-T-Software-Solution/meowmeow-be
            branch: main
            image_name: ttss-be
            image_tag: latest
            working_dir: .
            project_dir: MeowMeow.Facing
            dockerfile: ./MeowMeow.Facing/Dockerfile
            container_app_name: be-api
            container_app_resource_group: demo-source-gen

    steps:
      - name: Set an environment variable
        run: echo "IMAGE=$container_registry_server/${{ matrix.image_name }}:${{ matrix.image_tag }}" >> $GITHUB_ENV

      - name: Running Variables
        run: |
          echo "Global Variables"
          echo "CONTAINER_REGISTRY_SERVER=$container_registry_server"
          echo "CONTAINER_REGISTRY_USERNAME=$container_registry_username"
          echo "CONTAINER_REGISTRY_PASSWORD=$container_registry_password"
          echo "CONTAINER_APP_REVISION_SUFFIX=$container_app_revision_suffix"

          echo "----------------------"
          echo "Matrix Variables"
          echo "----------------------"

          echo "IMAGE=$IMAGE"
          echo "REPOSITORY=${{ matrix.repository }}"
          echo "BRANCH=${{ matrix.branch }}"
          echo "IMAGE_NAME=${{ matrix.image_name }}"
          echo "IMAGE_TAG=${{ matrix.image_tag }}"
          echo "WORKING_DIR=${{ matrix.working_dir }}"
          echo "PROJECT_DIR=${{ matrix.project_dir }}"
          echo "DOCKERFILE=${{ matrix.dockerfile }}"
          echo "CONTAINER_APP_NAME=${{ matrix.container_app_name }}"
          echo "CONTAINER_APP_RESOURCE_GROUP=${{ matrix.container_app_resource_group }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repository }}
          ref: ${{ matrix.branch }}
          token: ${{ secrets.GH_TOKEN_THADA_TTSS }}

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.container_registry_server }}
          username: ${{ env.container_registry_username }}
          password: ${{ env.container_registry_password }}

      - name: Build and publish docker image
        working-directory: ${{ matrix.working_dir }}
        shell: bash
        run: |
          docker build --build-arg PROJECT_DIR=${{ matrix.project_dir }} -t ${{ env.IMAGE }} -f ${{ matrix.dockerfile }} .
          docker push ${{ env.IMAGE }}

      # - name: Build
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.fe_backoffice_working_dir }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     file: ${{ env.fe_backoffice_dockerfile }}
      #     push: true
      #     build-args: PROJECT_DIR=${{ env.fe_backoffice_project_dir }}
      #     tags: latest

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure_credential }}

      # Azure CLI 2.52.0 containerapp extension is in preview
      # Required to install manually
      - name: Deploy image to Azure Container App with Revision Suffix
        uses: azure/CLI@v1
        with:
          azcliversion: 2.52.0
          inlineScript: |
            az extension add --name containerapp
            az containerapp update \
              --name ${{ matrix.container_app_name }} \
              --resource-group ${{ matrix.container_app_resource_group }} \
              --image ${{ env.IMAGE }} \
              --revision-suffix ${{ env.container_app_revision_suffix }} > ${{ matrix.container_app_name }}.log.txt
